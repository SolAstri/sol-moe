---
interface Props {
  title: string;
  date: string;
  excerpt: string;
  slug: string;
  tags: string[];
  readingTime?: string;
  type: 'analysis' | 'review';
  rating?: number;
}

const { title, date, excerpt, slug, tags, readingTime, type, rating } = Astro.props;
---

<article class="bg-semi-transparent rounded-lg p-4 hover:ring-1 hover:ring-accent transition-all">
  <div class="flex flex-col gap-2">
    <div class="flex items-center gap-2 text-sm font-mono">
      <time class="text-accent/80">{date}</time>
      {readingTime && (
        <>
          <span class="text-accent/40">•</span>
          <span class="text-main/60">{readingTime}</span>
        </>
      )}
      {type && (
        <>
          <span class="text-accent/40">•</span>
          <span class="text-main/60 capitalize">{type}</span>
        </>
      )}
    </div>

    <h2 class="text-xl font-medium">
      <a href={`/blog/${slug}`} class="hover:text-accent transition-colors">
        {title}
      </a>
    </h2>

    <p class="text-main/70 text-sm">
      {excerpt}
    </p>

    <div class="flex items-center justify-between mt-1">
      <div class="flex flex-wrap gap-2">
        {tags.map(tag => (
          <a 
            href={`/tags/${tag}`}
            class="bg-accent/10 px-2 py-0.5 rounded-full text-accent/80 text-xs font-mono hover:bg-accent/20 transition-colors"
          >
            #{tag}
          </a>
        ))}
      </div>

      <a 
        href={`/blog/${slug}`}
        class="inline-flex items-center gap-1 text-accent hover:text-accent/80 transition-colors font-mono text-sm"
      >
        Read more
        <span class="text-lg leading-none">&rarr;</span>
      </a>
    </div>
  </div>
</article>