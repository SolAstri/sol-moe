---
interface TocItem {
  id: string;
  text: string;
  depth: number;
}

interface Props {
  toc: TocItem[];
}

const { toc } = Astro.props;
---

<nav class="sticky top-24 bg-semi-transparent rounded-lg p-4 max-h-[calc(100vh-8rem)] overflow-y-auto">
  <h2 class="text-sm font-mono text-accent mb-3">Table of Contents</h2>
  <ul class="space-y-2 text-sm">
    {toc.map(item => (
      <li style={`margin-left: ${(item.depth - 1) * 0.75}rem`}>
        <a
          href={`#${item.id}`}
          class="text-main/70 hover:text-accent transition-colors inline-block"
        >
          {item.text}
        </a>
      </li>
    ))}
  </ul>
</nav>

<script>
  const links = document.querySelectorAll('nav a');
  const sections = document.querySelectorAll('h2, h3, h4');
  
  const observerOptions = {
    rootMargin: '-20% 0px -35% 0px',
    threshold: 1.0
  };

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const id = entry.target.getAttribute('id');
      const link = document.querySelector(`nav a[href="#${id}"]`);
      
      if (entry.isIntersecting) {
        links.forEach(l => l.classList.remove('text-accent'));
        link?.classList.add('text-accent');
      }
    });
  }, observerOptions);

  sections.forEach(section => observer.observe(section));
</script>