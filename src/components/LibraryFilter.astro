---
// components/LibraryFilter.astro
interface Props {
    currentStatus?: string;
    currentSort?: string;
    currentTag?: string;
    tags: string[];
    stats: {
        watching: number;
        completed: number;
        planned: number;
        onHold: number;
        dropped: number;
    };
}

const { currentStatus, currentSort, currentTag, tags, stats } = Astro.props;

const statusFilters = [
    { id: 'watching', label: 'Watching', count: stats.watching },
    { id: 'completed', label: 'Completed', count: stats.completed },
    { id: 'planned', label: 'Planned', count: stats.planned },
    { id: 'on_hold', label: 'On Hold', count: stats.onHold },
    { id: 'dropped', label: 'Dropped', count: stats.dropped }
];

const sortOptions = [
    { id: 'recent', label: 'Recently Updated' },
    { id: 'rating', label: 'Highest Rated' },
    { id: 'progress', label: 'Progress' },
    { id: 'title', label: 'Title' }
];

function getFilterUrl(params: Record<string, string | undefined>) {
    const url = new URL(Astro.url);
    Object.entries(params).forEach(([key, value]) => {
        if (value) {
            url.searchParams.set(key, value);
        } else {
            url.searchParams.delete(key);
        }
    });
    return url.pathname + url.search;
}
---

<div class="bg-semi-transparent rounded-lg p-4 space-y-4">
    <div>
        <h3 class="text-sm font-mono text-accent mb-2">Status</h3>
        <div class="flex flex-wrap gap-2">
            <a
                    href="/library"
                    class:list={[
                        'px-3 py-1.5 rounded-full font-mono text-sm transition-colors',
                        !currentStatus ? 'bg-accent text-main' : 'bg-accent/10 text-accent hover:bg-accent/20'
                    ]}
            >
                All
            </a>
            {statusFilters.map(status => (
                    <a
                            href={getFilterUrl({ status: status.id, sort: currentSort, tag: currentTag })}
                            class:list={[
                                'px-3 py-1.5 rounded-full font-mono text-sm transition-colors flex items-center gap-2',
                                currentStatus === status.id ? 'bg-accent text-main' : 'bg-accent/10 text-accent hover:bg-accent/20'
                            ]}
                    >
                        {status.label}
                        <span class="text-main/60">{status.count}</span>
                    </a>
            ))}
        </div>
    </div>

    <div>
        <h3 class="text-sm font-mono text-accent mb-2">Sort By</h3>
        <div class="flex flex-wrap gap-2">
            {sortOptions.map(sort => (
                    <a
                            href={getFilterUrl({ status: currentStatus, sort: sort.id, tag: currentTag })}
                            class:list={[
                                'px-3 py-1.5 rounded-full font-mono text-sm transition-colors',
                                currentSort === sort.id ? 'bg-accent text-main' : 'bg-accent/10 text-accent hover:bg-accent/20'
                            ]}
                    >
                        {sort.label}
                    </a>
            ))}
        </div>
    </div>

    {tags.length > 0 && (
            <div>
                <h3 class="text-sm font-mono text-accent mb-2">Popular Tags</h3>
                <div class="flex flex-wrap gap-2">
                    {tags.map(tag => (
                            <a
                                    href={getFilterUrl({ status: currentStatus, sort: currentSort, tag })}
                                    class:list={[
                                        'px-2 py-1 rounded-full text-xs font-mono transition-colors',
                                        currentTag === tag ? 'bg-accent text-main' : 'bg-accent/10 text-accent hover:bg-accent/20'
                                    ]}
                            >
                                #{tag}
                            </a>
                    ))}
                </div>
            </div>
    )}
</div>