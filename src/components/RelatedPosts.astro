---
interface Post {
  title: string;
  slug: string;
  tags: string[];
  excerpt: string;
}

interface Props {
  currentSlug: string;
  currentTags: string[];
  allPosts: Post[];
}

const { currentSlug, currentTags, allPosts } = Astro.props;

const relatedPosts = allPosts
  .filter(post => post.slug !== currentSlug)
  .filter(post => post.tags.some(tag => currentTags.includes(tag)))
  .slice(0, 3);
---

{relatedPosts.length > 0 && (
  <section class="mt-16 pt-8 border-t border-accent/10">
    <h2 class="text-lg font-mono text-accent mb-6">Related Posts</h2>
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {relatedPosts.map(post => (
        <a 
          href={`/blog/${post.slug}`}
          class="group bg-semi-transparent rounded-lg p-4 hover:ring-1 hover:ring-accent transition-all"
        >
          <h3 class="font-medium group-hover:text-accent transition-colors line-clamp-2">
            {post.title}
          </h3>
          <p class="mt-2 text-sm text-main/70 line-clamp-2">
            {post.excerpt}
          </p>
          <div class="mt-3 flex flex-wrap gap-2">
            {post.tags.map(tag => (
              <span class="text-xs font-mono bg-accent/10 px-2 py-0.5 rounded-full text-accent/80">
                #{tag}
              </span>
            ))}
          </div>
        </a>
      ))}
    </div>
  </section>
)}